name: pre-commit
on: pull_request

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
    - name: Install poetry
      run: pipx install poetry

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup python

      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install dependencies
      run: poetry install

    - name: get full demisto-sdk version
      id: get-demisto-sdk-version
      run: |
        # this gives us the full version, including the commit hash if available
        echo version=$(poetry show | grep demisto-sdk) >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-3|${{ env.pythonLocation }}-${{ steps.get-demisto-sdk-version.outputs.version }}

    - name: run pre-commit
      run: poetry run demisto-sdk pre-commit -g --test

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        report_paths: |
            **/Packs/**/Integrations/**/.report_pytest.xml
            **/Packs/**/Scripts/**/.report_pytest.xml

        github_token: ${{ secrets.GITHUB_TOKEN }}
        check_name: Unit Test Report
        detailed_summary: true
        annotate_only: true


    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: |
          **/Packs/**/Integrations/**/.coverage
          **/Packs/**/Scripts/**/.coverage
        badge: true
        fail_below_min: true
        format: markdown
        output: both
        thresholds: '70 80'

    - name: Append coverage to summary
      id: append-coverage
      run: |
        cat code-coverage-results.md >> $GITHUB_SUMMARY

    - name: Comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: "Unit Test Report"
        message: $GITHUB_SUMMARY
