name: Handle New External PRs
on:
  pull_request_target:
    types: [opened]

permissions:
  contents: read

jobs:
  handle_new_external_pr:
    runs-on: ubuntu-latest
    if: github.repository == 'demisto/content' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork == true && contains(github.head_ref, 'xsoar-bot-contrib-ContributionTestPack') == false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Get Playbooks Changed
        id: changed-files
        uses: tj-actions/changed-files@v35.1.0
        with:
          files: |
            Packs/**/Playbooks/**
          since_last_remote_commit: false

      - name: Add Security Label
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ steps.changed-files.outputs.all_changed_files }}
        with:
          labels: Security

      - name: Add External Label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: External PR

      - name: Print Context
        run: |
          echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv==2021.5.29
      - name: Update External PR
        env:
          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}
          EVENT_PAYLOAD: ${{ toJson(github.event) }}
        run: |
          echo "Updating External PR ${{ github.event.pull_request.html_url }}"
          cd Utils/github_workflow_scripts
          pipenv sync
          pipenv run ./handle_external_pr.py
          echo "Finished Handling External PR"
      - name: Send Notification
        env:
          CONTENTBOT_GH_ADMIN_TOKEN: ${{ secrets.CONTENTBOT_GH_ADMIN_TOKEN }}
          EVENT_PAYLOAD: ${{ toJson(github.event) }}
          CORTEX_XSOAR_SLACK_TOKEN: ${{ secrets.CORTEX_XSOAR_SLACK_TOKEN }}
        run: |
          echo "Sending notification about External PR ${{ github.event.pull_request.html_url }}"
          cd Utils/github_workflow_scripts
          pipenv run ./send_slack_message.py
